"use strict";(self.webpackChunkdrop_engine_widget_ts=self.webpackChunkdrop_engine_widget_ts||[]).push([[538],{71538:(e,r,t)=>{t.r(r),t.d(r,{WalletLinkConnector:()=>c});var n=t(57776);function o(){return o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},o.apply(this,arguments)}function i(e,r){return i=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e},i(e,r)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var c=function(e){var r,n;function c(r){var t,n=r.url,o=r.appName,i=r.appLogoUrl,c=r.darkMode,h=r.supportedChainIds;return(t=e.call(this,{supportedChainIds:h})||this).url=n,t.appName=o,t.appLogoUrl=i,t.darkMode=c||!1,t.handleChainChanged=t.handleChainChanged.bind(a(t)),t.handleAccountsChanged=t.handleAccountsChanged.bind(a(t)),t}n=e,(r=c).prototype=Object.create(n.prototype),r.prototype.constructor=r,i(r,n);var h=c.prototype;return h.activate=function(){try{var e=this,r=function(){return Promise.resolve(e.provider.request({method:"eth_requestAccounts"})).then((function(r){var t=r[0];return e.provider.on("chainChanged",e.handleChainChanged),e.provider.on("accountsChanged",e.handleAccountsChanged),{provider:e.provider,account:t}}))},n=function(){if(window.ethereum&&!0===window.ethereum.isCoinbaseWallet)e.provider=window.ethereum;else{var r=function(){if(!e.walletLink)return Promise.resolve(Promise.all([t.e(639),t.e(419),t.e(654)]).then(t.bind(t,25419)).then((function(e){var r;return null!=(r=null==e?void 0:e.default)?r:e}))).then((function(r){e.walletLink=new r(o({appName:e.appName,darkMode:e.darkMode},e.appLogoUrl?{appLogoUrl:e.appLogoUrl}:{})),e.provider=e.walletLink.makeWeb3Provider(e.url,1)}))}();if(r&&r.then)return r.then((function(){}))}}();return Promise.resolve(n&&n.then?n.then(r):r())}catch(i){return Promise.reject(i)}},h.getProvider=function(){try{return Promise.resolve(this.provider)}catch(e){return Promise.reject(e)}},h.getChainId=function(){try{return Promise.resolve(this.provider.chainId)}catch(e){return Promise.reject(e)}},h.getAccount=function(){try{return Promise.resolve(this.provider.request({method:"eth_requestAccounts"})).then((function(e){return e[0]}))}catch(e){return Promise.reject(e)}},h.deactivate=function(){this.provider.removeListener("chainChanged",this.handleChainChanged),this.provider.removeListener("accountsChanged",this.handleAccountsChanged)},h.close=function(){try{return this.provider.close(),this.emitDeactivate(),Promise.resolve()}catch(e){return Promise.reject(e)}},h.handleChainChanged=function(e){this.emitUpdate({chainId:e})},h.handleAccountsChanged=function(e){this.emitUpdate({account:e[0]})},c}(n.Q)}}]);
//# sourceMappingURL=538.e5113be8.chunk.js.map